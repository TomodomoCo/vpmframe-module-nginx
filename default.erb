<% if app_stage == "production" %>
server {
	listen 8080;

	# Redirect to www. if on production
	server_name <%= app_domain %>;
	rewrite ^ $scheme://www.<%= app_domain %>$request_uri permanent;
}
<% end %>

server {

	##################################
	#                                #
	#        Default settings        #
	#                                #
	##################################

	# Error Logging
	error_log /var/log/nginx/error.log notice;
	# rewrite_log on;

	# Set the port
	listen 8080;

	# Where are we located? What should we load by default?
	root <%= app_deploy_to %>/current/public;
	index index.php index.html index.htm;

	# What's our domain name?
	<% if app_stage == "production" %>
	server_name www.<%= app_domain %>;
	<% else %>
	server_name <%= app_domain %>;
	<% end %>

	# Avoid sendfile issues with sending stale files
	# More: <http://www.vanpattenmedia.com/2012/a-tale-of-stale-content/>
	sendfile off;

	# TimThumb internal security lockdown
	location ~* ^(?:/content/themes/<%= app_theme %>)?/img/timthumb/timthumb(?:-config)?.php {
		# prevent direct querying of timthumb.php
		internal;
		try_files $uri =404;
		location ~ \..*/.*\.php$ {
			return 404;
		}
		fastcgi_pass unix:/var/run/php5-fpm-pools-<%= app_name %>.sock;
	}


	##################################
	#                                #
	#   Rewrites and asset caching   #
	#                                #
	##################################

	location / {
		try_files $uri $uri/ @rewrites;
	}

	location @rewrites {
		rewrite ^/plugins/(.*)$ /content/plugins/$1 last;

		# If nothing matches, send it to index.php
		rewrite ^ /index.php last;
	}


	###################
	#      Fonts      #
	###################

	location ~* \.(?:eot|ttf|otf|woff|svg)$ {
		# Roots-inspired rewrites
		rewrite "^/fonts/(.*)$" /content/themes/<%= app_theme %>/fonts/$1 last;

		# Caching
		<% if app_stage != "dev" %>
		expires 120d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		<% else %>
		expires 0m;
		add_header Pragma no-cache;
		add_header Cache-Control "no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0";
		<% end %>
	}

	###################
	#      Images     #
	###################

	location ~* \.(?:ico|gif|jpe?g|png)$ {
		# Mask TimThumb
		rewrite "^/img/e:grayblur/b:([0-9]+)/w:([0-9]+)/static.<%= site_domain %>/(.*)$" /content/themes/<%= app_theme %>/img/timthumb/timthumb.php?src=http://static.<%= site_domain %>/$3&w=$2&f=2|8|8|8|8|8|8|8|8|3,$1 last; # force the rewrite to the correct domain

		# Redirect /content/uploads requests to CloudFront with a 301
		rewrite "^/content/uploads/(.*)$" http://static.<%= site_domain %>/content/uploads/$1 permanent;

		# QuickAssets-friendly rewrite, with a Roots-inspired core
		rewrite "^/img/(.*/)?(\w+)(?:\.\d{14})?\.([A-Za-z]{2,4})$" /content/themes/<%= app_theme %>/img/$1$2.$3 last;

		# Caching
		<% if app_stage != "dev" %>
		expires 7d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		<% else %>
		expires 0m;
		add_header Pragma no-cache;
		add_header Cache-Control "no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0";
		<% end %>
	}


	###################
	#     CSS & JS    #
	###################

	location ~* \.(?:css|js)$ {
		# QuickAssets-friendly rewrite, with a Roots-inspired core
		rewrite "^/(?:css|js)/(.*/)?(\w+)(?:\.\d{14})?\.([A-Za-z]{2,4})$" /content/themes/<%= app_theme %>/$3/$1$2.$3 last;

		# Caching
		<% if app_stage != "dev" %>
		expires 2d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		<% else %>
		expires 0m;
		add_header Pragma no-cache;
		add_header Cache-Control "no-cache, no-store, must-revalidate, proxy-revalidate, max-age=0";
		<% end %>
	}


	##################################
	#                                #
	#         Error handling         #
	#                                #
	##################################

	# redirect server error pages to the static page /50x.html
	# error_page 404 /404.html;
	# error_page 500 502 503 504 /50x.html;
	# location = /50x.html {
	# 	root /usr/share/nginx/www;
	# }

	# Don't log when robots or favicon is accessed or 404'd
	location = /robots.txt  { access_log off; log_not_found off; }
	location = /favicon.ico { access_log off; log_not_found off; }

	# Prevents dotfiles from being served
	location ~ /\.          { access_log off; log_not_found off; deny all; }

	# Disable execution of PHP from uploads folder
	location ~* /content/uploads/.*\.php$ {
		return 403;
	}

	# Disable any public access to TimThumb cache
	location ~*  ^(?:/content/themes/<%= app_theme %>)?/img/timthumb/cache/.*$ {
		return 403;
	}


	##################################
	#                                #
	#      PHP-related settings      #
	#                                #
	##################################

	# these are now server-global, so our 'internal'-only PHP scripts (TimThumb) can inherit the settings
	# in their location blocks

	fastcgi_param  QUERY_STRING       $query_string;
	fastcgi_param  REQUEST_METHOD     $request_method;
	fastcgi_param  CONTENT_TYPE       $content_type;
	fastcgi_param  CONTENT_LENGTH     $content_length;

	fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
	fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
	# for Chroot # fastcgi_param  SCRIPT_FILENAME    /vanpattenmedia.com/$fastcgi_script_name;
	fastcgi_param  REQUEST_URI        $request_uri;
	fastcgi_param  DOCUMENT_URI       $document_uri;
	fastcgi_param  DOCUMENT_ROOT      $document_root;
	fastcgi_param  SERVER_PROTOCOL    $server_protocol;

	fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
	fastcgi_param  SERVER_SOFTWARE    nginx;

	fastcgi_param  REMOTE_ADDR        $remote_addr;
	fastcgi_param  REMOTE_PORT        $remote_port;
	fastcgi_param  SERVER_ADDR        $server_addr;
	fastcgi_param  SERVER_PORT        80;
	fastcgi_param  SERVER_NAME        $server_name;


	location ~ \.php {
		# prevent accidental PHP execution of non-PHP extensions
		# see http://wiki.nginx.org/Pitfalls
		try_files $uri =404;
		location ~ \..*/.*\.php$ {
			return 404;
		}

		fastcgi_pass unix:/var/run/php5-fpm-pools-<%= app_name %>.sock;
	}
}
